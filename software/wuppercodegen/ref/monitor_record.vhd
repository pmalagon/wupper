-- ***************************************************************************
-- ***************************************************************************
-- ***************************************************************************
-- ***************************************************************************
-- ***************************************************************************
-- DO NOT EDIT THIS FILE
-- 
-- This file was generated from 'input/monitor_record.vhd.template', version 1.1
-- by the script 'wuppercodegen', version: xx.yy.zz, using the following commandline:
-- 
-- ./wuppercodegen/cli.py input/test-registers.yaml input/monitor_record.vhd.template output/monitor_record.vhd
-- 
-- Please do NOT edit this file, but edit the source file at 'input/monitor_record.vhd.template'
-- 
-- ***************************************************************************
-- ***************************************************************************
-- ***************************************************************************
-- ***************************************************************************
-- ***************************************************************************



--
-- General Board Info
--
  -- Bitfields of General Board Info
  type register_map_generic_constants_type is record
    INTERRUPTS                     : std_logic_vector(15 downto 8);   -- Number of Interrupts
    DESCRIPTORS                    : std_logic_vector(7 downto 0);    -- Number of Descriptors
  end record;


  -- General Board Info
  type register_map_gen_board_info_type is record
    BOARD_ID_SVN                   : std_logic_vector(15 downto 0);   -- Board ID SVN Revision
    BOARD_ID_TIMESTAMP             : std_logic_vector(39 downto 0);   -- Board ID Date / Time in BCD format YYMMDDhhmm
    GENERIC_CONSTANTS              : register_map_generic_constants_type;
    NUM_OF_CHANNELS                : std_logic_vector(7 downto 0);    -- Number of GBT Channels
    CARD_TYPE                      : std_logic_vector(63 downto 0);   -- Card Type:
                                                                      --   - 709: VC709
                                                                      --   - 710: HTG710
                                                                      
    GBT_MAPPING                    : std_logic_vector(7 downto 0);    -- CXP-to-GBT mapping:
                                                                      --   0: NORMAL CXP1 1-12 CXP2 13-24
                                                                      --   1: ALTERNATE CXP1 1-4,9-12,17-20
                                                                      
  end record;

  -- Bitfields of Housekeeping and global monitor
  type register_map_hk_mon_type is record
    CDCE_PLL_LOCK                  : std_logic_vector(1 downto 1);    -- CDCE_PLL_LOCK
    I2C_ACK_ERROR                  : std_logic_vector(0 downto 0);    -- i2c_ack_error
  end record;

  type register_map_spi_wr_type is record
    SPI_FULL                       : std_logic_vector(32 downto 32);  -- SPI FIFO Full
  end record;

  type register_map_spi_rd_type is record
    SPI_EMPTY                      : std_logic_vector(32 downto 32);  -- SPI FIFO Empty
    SPI_DOUT                       : std_logic_vector(31 downto 0);   -- SPI READ Data
  end record;

  type register_map_i2c_wr_type is record
    I2C_FULL                       : std_logic_vector(25 downto 25);  -- I2C FIFO full
  end record;

  type register_map_i2c_rd_type is record
    I2C_EMPTY                      : std_logic_vector(8 downto 8);    -- I2C FIFO Empty
    I2C_DOUT                       : std_logic_vector(7 downto 0);    -- I2C READ Data
  end record;


  -- Housekeeping and global monitor
  type register_map_hk_monitor_type is record
    PLL_LOCK                       : std_logic_vector(0 downto 0);    -- Main MMCM PLL Lock Status
    HK_MON                         : register_map_hk_mon_type;     
    SPI_WR                         : register_map_spi_wr_type;     
    SPI_RD                         : register_map_spi_rd_type;     
    I2C_WR                         : register_map_i2c_wr_type;     
    I2C_RD                         : register_map_i2c_rd_type;     
  end record;


  -- Bitfields of GBT monitor
  type register_map_gbt_version_type is record
    DATA                           : std_logic_vector(63 downto 48);  -- Data
    GBT_VERSION                    : std_logic_vector(47 downto 32);  -- GBT Version
    GTH_IP_VERSION                 : std_logic_vector(31 downto 16);  -- GTH IP Version
    RESERVED                       : std_logic_vector(15 downto 3);   -- Reserved
    GTHREFCLK_SEL                  : std_logic_vector(2 downto 2);    -- GTHREFCLK SEL
    RX_CLK_SEL                     : std_logic_vector(1 downto 1);    -- RX CLK SEL
    PLL_SEL                        : std_logic_vector(0 downto 0);    -- PLL SEL
  end record;

  type register_map_gbt_txreset_done_type is record
    BF1                            : std_logic_vector(27 downto 16);  -- TX Reset done [23:12]
    BF2                            : std_logic_vector(11 downto 0);   -- TX Reset done [11:0]
  end record;

  type register_map_gbt_rxreset_done_type is record
    BF1                            : std_logic_vector(27 downto 16);  -- RX Reset done [23:12]
    BF2                            : std_logic_vector(11 downto 0);   -- RX Reset done [11:0]
  end record;

  type register_map_gbt_txfsmreset_done_type is record
    BF1                            : std_logic_vector(27 downto 16);  -- TX FSM Reset done [23:12]
    BF2                            : std_logic_vector(11 downto 0);   -- TX FSM Reset done [11:0]
  end record;

  type register_map_gbt_rxfsmreset_done_type is record
    BF1                            : std_logic_vector(27 downto 16);  -- RX FSM Reset done [23:12]
    BF2                            : std_logic_vector(11 downto 0);   -- RX FSM Reset done [11:0]
  end record;

  type register_map_gbt_cpll_fbclk_lost_type is record
    BF1                            : std_logic_vector(27 downto 16);  -- CPLL FBCLK LOST [23:12]
    BF2                            : std_logic_vector(11 downto 0);   -- CPLL FBCLK LOST [11:0]
  end record;

  type register_map_gbt_cpll_lock_type is record
    BF1                            : std_logic_vector(30 downto 28);  -- QPLL LOCK [5:3]
    BF2                            : std_logic_vector(27 downto 16);  -- CPLL LOCK [23:12]
    BF3                            : std_logic_vector(14 downto 12);  -- QPLL LOCK [2:0]
    BF4                            : std_logic_vector(11 downto 0);   -- CPLL LOCK [11:0]
  end record;

  type register_map_gbt_rxcdr_lock_type is record
    BF1                            : std_logic_vector(27 downto 16);  -- RX CDR LOCK [23:12]
    BF2                            : std_logic_vector(11 downto 0);   -- RX CDR LOCK [11:0]
  end record;

  type register_map_gbt_clk_sampled_type is record
    BF1                            : std_logic_vector(27 downto 16);  -- clk sampled [23:12]
    BF2                            : std_logic_vector(11 downto 0);   -- clk sampled [11:0]
  end record;

  type register_map_gbt_rx_is_header_type is record
    BF1                            : std_logic_vector(27 downto 16);  -- RX IS HEADER [23:12]
    BF2                            : std_logic_vector(11 downto 0);   -- RX IS HEADER [11:0]
  end record;

  type register_map_gbt_rx_is_data_type is record
    BF1                            : std_logic_vector(27 downto 16);  -- RX IS DATA [23:12]
    BF2                            : std_logic_vector(11 downto 0);   -- RX IS DATA [11:0]
  end record;

  type register_map_gbt_rx_header_found_type is record
    BF1                            : std_logic_vector(27 downto 16);  -- RX HEADER FOUND [23:12]
    BF2                            : std_logic_vector(11 downto 0);   -- RX HEADER FOUND [11:0]
  end record;

  type register_map_gbt_alignment_done_type is record
    BF1                            : std_logic_vector(27 downto 16);  -- RX ALIGNMENT DONE [23:12]
    BF2                            : std_logic_vector(11 downto 0);   -- RX ALIGNMENT DONE [11:0]
  end record;

  type register_map_gbt_out_mux_status_type is record
    BF1                            : std_logic_vector(27 downto 16);  -- GBT output mux status [23:12]
    BF2                            : std_logic_vector(11 downto 0);   -- GBT output mux status [11:0]
  end record;

  type register_map_gbt_error_type is record
    BF1                            : std_logic_vector(27 downto 16);  -- Error flags [23:12]
    BF2                            : std_logic_vector(11 downto 0);   -- Error flags [11:0]
  end record;

  type register_map_gbt_gbt_topbot_c_type is record
    BF1                            : std_logic_vector(27 downto 16);  -- TopBot_c [23:12]
    BF2                            : std_logic_vector(11 downto 0);   -- TopBot_c [11:0]
  end record;


-- GBT monitor
  type register_map_gbt_monitor_type is record
    GBT_VERSION                    : register_map_gbt_version_type;
    GBT_TXRESET_DONE               : register_map_gbt_txreset_done_type;
    GBT_RXRESET_DONE               : register_map_gbt_rxreset_done_type;
    GBT_TXFSMRESET_DONE            : register_map_gbt_txfsmreset_done_type;
    GBT_RXFSMRESET_DONE            : register_map_gbt_rxfsmreset_done_type;
    GBT_CPLL_FBCLK_LOST            : register_map_gbt_cpll_fbclk_lost_type;
    GBT_CPLL_LOCK                  : register_map_gbt_cpll_lock_type;
    GBT_RXCDR_LOCK                 : register_map_gbt_rxcdr_lock_type;
    GBT_CLK_SAMPLED                : register_map_gbt_clk_sampled_type;
    GBT_RX_IS_HEADER               : register_map_gbt_rx_is_header_type;
    GBT_RX_IS_DATA                 : register_map_gbt_rx_is_data_type;
    GBT_RX_HEADER_FOUND            : register_map_gbt_rx_header_found_type;
    GBT_ALIGNMENT_DONE             : register_map_gbt_alignment_done_type;
    GBT_OUT_MUX_STATUS             : register_map_gbt_out_mux_status_type;
    GBT_ERROR                      : register_map_gbt_error_type;  
    GBT_GBT_TOPBOT_C               : register_map_gbt_gbt_topbot_c_type;
  end record;



-- CentralRouter monitor
  type register_map_cr_monitor_type is record
    CR_TH_GBT00_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_FH_GBT00_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_TH_GBT01_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_FH_GBT01_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_TH_GBT02_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_FH_GBT02_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_TH_GBT03_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_FH_GBT03_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_TH_GBT04_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_FH_GBT04_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_TH_GBT05_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_FH_GBT05_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_TH_GBT06_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_FH_GBT06_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_TH_GBT07_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_FH_GBT07_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_TH_GBT08_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_FH_GBT08_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_TH_GBT09_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_FH_GBT09_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_TH_GBT10_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_FH_GBT10_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_TH_GBT11_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_FH_GBT11_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_TH_GBT12_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_FH_GBT12_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_TH_GBT13_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_FH_GBT13_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_TH_GBT14_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_FH_GBT14_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_TH_GBT15_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_FH_GBT15_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_TH_GBT16_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_FH_GBT16_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_TH_GBT17_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_FH_GBT17_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_TH_GBT18_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_FH_GBT18_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_TH_GBT19_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_FH_GBT19_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_TH_GBT20_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_FH_GBT20_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_TH_GBT21_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_FH_GBT21_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_TH_GBT22_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_FH_GBT22_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_TH_GBT23_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
    CR_FH_GBT23_MON                : std_logic_vector(63 downto 0);   -- See Central Router Doc
  end record;


  -- Monitor interface toward the dma_control block
  type register_map_monitor_type is record
    register_map_gen_board_info : register_map_gen_board_info_type;
    register_map_hk_monitor     : register_map_hk_monitor_type;
    register_map_cr_monitor     : register_map_cr_monitor_type;
    register_map_gbt_monitor    : register_map_gbt_monitor_type;
  end record;